# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: kefir
service: fault-tolerant-system

custom:
  answersTableName: answers
  bucketName: fault-tolerant-system-website
  customDomain:
    domainName: { self:custom.apiDomain }
    basePath: api
    certificateArn:
    hostedZoneId:
    createRoute53Record: true
    endpointType: REGIONAL
    securityPolicy: tls_1_3
    apiType: http
    autoDomain: true

constructs:
  static-website:
    type: static-website
    bucketName: ${self:custom.bucketName}
    path: frontend/dist/frontend/browser
    domain:
    certificate:

provider:
  name: aws
  runtime: nodejs22.x
  region: eu-west-1
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [AnswersTable, Arn]
  environment:
    ANSWERS_TABLE: ${self:custom.answersTableName}

  logs:
    httpApi: true

  httpApi:
    cors:
      allowedOrigins:
        - http://localhost:4200
      allowedMethods:
        - GET
        - POST
      allowedHeaders:
        - Content-Type
        - Authorization
functions:
  startProcessWithBackoff:
    handler: backend/answers/service.postAnswer

  getAnswers:
    handler: backend/answers/service.getAnswers
    events:
      - httpApi:
          path: /answers
          method: get
  getAnswer:
    handler: backend/answers/service.getById
    events:
      - httpApi:
          path: /answers/{id}
          method: get
  worker:
    handler: backend/worker.processAnswer

resources:
  Resources:
    AnswersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.answersTableName}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
plugins:
  - serverless-lift
  - serverless-domain-manager
  - serverless-scriptable-plugin
  - serverless-step-functions
